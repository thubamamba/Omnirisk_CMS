<% content_for :section_title, "API Clients" %>

<%= h2_with_anchor "API Clients" %>
<p>Jumpstart Pro includes a built-in API client generator. You can use it to create your own API clients for integrations with any API you would like.</p>
<p>As developers, it's easy to reach for Rubygems, but each dependency we add makes it harder to maintain your application. We've found that we need to fork most API Rubygems to fix bugs or implement API features that aren't supported yet in the library.</p>
<p>Now, our default is to build an API client ourselves. It's easy to maintain, doesn't break from external changes, and only implements the features we need. We've made this available to Jumpstart Pro users to more easily take advantage of building their own API clients.</p>
<p>To learn more about API Clients in Jumpstart Pro, check out the <%= link_to "Net Http API Client from Scratch", "https://gorails.com/episodes/net-http-api-client-from-scratch?autoplay=1", class: "text-primary-500", target: :_blank %> video on GoRails.</p>

<%= h2_with_anchor "Creating API Clients" %>
<p>Run the API client Rails generator to create an API client.</p>
<div class="not-prose">
  <pre><code>rails g api_client OpenAi</code></pre>
</div>
<p>This generates <code>app/clients/open_ai_client.rb</code> and a matching test file.</p>
<p>To implement API endpoints, you will define methods that make an HTTP request to the API endpoints. Here's an example using the Sendfox API:</p>
<div class="not-prose">
  <pre><code>class SendfoxClient &lt; ApplicationClient
  BASE_URI = "https://api.sendfox.com/"

  def me
    get "/me"
  end

  def lists
    get "/lists"
  end

  def list(id)
    get "/lists/#{id}"
  end

  def create_list(name:)
    post "/lists", body: {name: name}
  end

  def remove_contact(list_id:, contact_id:)
    delete "/lists/#{list_id}/contacts/#{contact_id}"
  end

  def contacts(email: nil)
    if email
      get "/contacts?email=#{CGI.escape(email)}"
    else
      get "/contacts"
    end
  end

  def contact(id)
    get "/contacts/#{id}"
  end

  def create_contact(**params)
    post "/contacts", body: params
  end

  def unsubscribe(email:)
    patch "/unsubscribe", body: {email: email}
  end

  def campaigns
    get "/campaigns"
  end

  def campaign(id)
    get "/#{id}"
  end
end</code></pre>
</div>

<%= h2_with_anchor "ApplicationClient" %>
<p>ApplicationClient is the base class that API clients inherit from. It provides methods for <code>get</code>, <code>post</code>, <code>patch</code>, <code>put</code>, and <code>delete</code>. It also handles authorization using the Authorization header and parsing response bodies as JSON.</p>
<p>You can override these methods in your API client to match your API. For example, if you need to parse XML instead of JSON, override the <code>parse_response</code> method and use Nokogiri instead.</p>

<%= h2_with_anchor "More features" %>
<p>Optionally pass the <code>--url</code> option to set the base URL</p>
<p>Optionally pass methods with <code>index</code>, <code>show</code>, <code>create</code>, <code>update</code>, <code>destroy</code> types</p>
<div class="not-prose">
  <pre><code>rails g api_client OpenAi completions:create --url https://api.openai.com</code></pre>
</div>
